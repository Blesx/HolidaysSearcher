/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.19.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.19.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.controlsfx:controlsfx:11.0.2'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    implementation 'org.openjfx:javafx-media:18.0.1'
}

javafx {
    version = "17.0.2"
    modules = [ 'javafx.controls', 'javafx.media' ]

}

application {
    // Define the main class for the application.
    mainClass = 'major_project.Launcher'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
